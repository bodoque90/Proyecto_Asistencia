<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Menú Principal</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="css/style.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/css/style.css">
</head>
<body class="bg-light">
  <body class="menu-bg">
  <div class="d-flex justify-content-center align-items-center min-vh-100">
    <div class="login-box menu shadow">
      <div class="quimico-logo menu">
        <i class="bi bi-beaker"></i>
        <span>QuimiControl</span>
      </div>
      <h2 class="login-title menu"><i class="bi bi-speedometer2"></i> Menú Principal</h2>
      <!-- Botones solo para empleados -->
      <% if (tipoUsuario === 'trabajador') { %>
      <form>
        <div class="mb-3 d-grid gap-2">
          <button class="btn btn-success btn-lg" id="btnEntrada" type="button">Marcar Entrada</button>
          <button class="btn btn-warning btn-lg" id="btnSalida" type="button">Marcar Salida</button>
        </div>
        <div id="alertaAsistencia"></div>
        <div class="mb-3 d-grid gap-2">
          <button class="btn btn-secondary btn-lg" type="button" onclick="location.href='/'">Cerrar Sesión</button>
        </div>
      </form>
      <% } %>
      <% if (tipoUsuario === 'administrador') { %>
        <hr>
        <div class="d-grid gap-3 mb-3">
          <button class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#modalAgregarEmpleado">Agregar Trabajador</button>
          <button class="btn btn-info btn-lg" data-bs-toggle="modal" data-bs-target="#modalHistorial">Ver Historial de Asistencias</button>
          <button class="btn btn-warning btn-lg" data-bs-toggle="modal" data-bs-target="#modalGestionUsuarios">Gestionar Usuarios</button>
        </div>
        <div class="d-grid gap-3 mb-3">
          <button class="btn btn-secondary btn-lg" type="button" onclick="location.href='/'">Cerrar Sesión</button>
        </div>
<!-- Modal Gestión de Usuarios -->
<div class="modal fade" id="modalGestionUsuarios" tabindex="-1" aria-labelledby="modalGestionUsuariosLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header bg-gradient" style="background: linear-gradient(90deg, #1b6ca8 0%, #4fd1c5 100%); color: #fff;">
        <h5 class="modal-title d-flex align-items-center gap-2" id="modalGestionUsuariosLabel">
          <i class="bi bi-people-fill"></i> Gestión de Usuarios
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body" style="background: #f8fafc;">
        <div id="alertaUsuarios"></div>
        <!-- Formulario de filtrado -->
        <form id="formFiltrarUsuarios" class="row g-2 mb-3 p-2 rounded" style="background: #e9ecef;">
          <div class="col-md-3">
            <input type="text" class="form-control" name="nombre" placeholder="Nombre">
          </div>
          <div class="col-md-3">
            <input type="text" class="form-control" name="apellido" placeholder="Apellido">
          </div>
          <div class="col-md-3">
            <input type="text" class="form-control" name="email" placeholder="Email">
          </div>
          <div class="col-md-3">
            <select class="form-select" name="rol">
              <option value="">Rol</option>
              <option value="trabajador">Trabajador</option>
              <option value="administrador">Administrador</option>
            </select>
          </div>
          <div class="col-12 text-end mt-2">
            <button type="submit" class="btn btn-primary btn-sm me-2"><i class="bi bi-funnel"></i> Filtrar</button>
            <button type="button" class="btn btn-secondary btn-sm" id="btnLimpiarFiltro"><i class="bi bi-x-circle"></i> Limpiar</button>
          </div>
        </form>
        <div class="table-responsive rounded shadow-sm" style="background: #fff;">
          <table class="table table-bordered table-hover align-middle" id="tablaUsuarios" style="border-radius: 12px; overflow: hidden;">
            <thead class="table-primary">
              <tr>
                <th><i class="bi bi-person"></i> Nombre</th>
                <th><i class="bi bi-person"></i> Apellido</th>
                <th><i class="bi bi-envelope"></i> Email</th>
                <th><i class="bi bi-person-badge"></i> Rol</th>
                <th><i class="bi bi-telephone"></i> Teléfono</th>
                <th><i class="bi bi-geo-alt"></i> Dirección</th>
                <th><i class="bi bi-gear"></i> Acciones</th>
              </tr>
            </thead>
            <tbody></tbody>
          </table>
        </div>
        <nav>
          <ul class="pagination justify-content-center mt-3" id="paginacionUsuarios"></ul>
        </nav>
      </div>
      <div class="modal-footer" style="background: #e9ecef;">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="bi bi-x-lg"></i> Cerrar</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal Editar Usuario -->
<div class="modal fade" id="modalEditarUsuario" tabindex="-1" aria-labelledby="modalEditarUsuarioLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="formEditarUsuario">
        <div class="modal-header">
          <h5 class="modal-title" id="modalEditarUsuarioLabel">Modificar Usuario</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="editarIdUsuario" name="idUsuario">
          <div class="mb-3">
            <label for="editarNombre" class="form-label">Nombre</label>
            <input type="text" class="form-control" id="editarNombre" name="nombre" required>
          </div>
          <div class="mb-3">
            <label for="editarApellido" class="form-label">Apellido</label>
            <input type="text" class="form-control" id="editarApellido" name="apellido" required>
          </div>
          <div class="mb-3">
            <label for="editarEmail" class="form-label">Correo electrónico</label>
            <input type="email" class="form-control" id="editarEmail" name="email" required>
          </div>
          <div class="mb-3">
            <label for="editarRol" class="form-label">Rol</label>
            <select class="form-select" id="editarRol" name="rol" required>
              <option value="trabajador">Trabajador</option>
              <option value="administrador">Administrador</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="editarTelefono" class="form-label">Teléfono</label>
            <input type="text" class="form-control" id="editarTelefono" name="telefono" required>
          </div>
          <div class="mb-3">
            <label for="editarDireccion" class="form-label">Dirección</label>
            <input type="text" class="form-control" id="editarDireccion" name="direccion" required>
          </div>
          <div id="alertaEditarUsuario"></div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="submit" class="btn btn-primary">Guardar Cambios</button>
        </div>
      </form>
    </div>
  </div>
</div>
 
<!-- Modal Historial -->
<div class="modal fade" id="modalHistorial" tabindex="-1" aria-labelledby="modalHistorialLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalHistorialLabel">Historial de Asistencias</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <button class="btn btn-outline-primary btn-sm me-2" id="btnTodos">Todos</button>
          <button class="btn btn-outline-warning btn-sm me-2" id="btnAtrasados">Entradas Atrasadas</button>
          <button class="btn btn-outline-danger btn-sm" id="btnAnticipados">Salidas Anticipadas</button>
        </div>
        <div id="alertaHistorial"></div>
        <div class="table-responsive">
          <table class="table table-bordered table-striped" id="tablaHistorial">
            <thead>
              <tr>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Email</th>
                <th>Fecha</th>
                <th>Hora Entrada</th>
                <th>Hora Salida</th>
              </tr>
            </thead>
            <tbody></tbody>
          </table>
        </div>
        <nav>
          <ul class="pagination justify-content-center" id="paginacionHistorial"></ul>
        </nav>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>
  
  
      <% } %>
      <div class="login-footer menu">
        Control de Asistencia &copy; 2025
      </div>
    </div>
  </div>

<!-- Modal -->
<div class="modal fade" id="modalAgregarEmpleado" tabindex="-1" aria-labelledby="modalAgregarEmpleadoLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="formAgregarEmpleado">
        <div class="modal-header">
          <h5 class="modal-title" id="modalAgregarEmpleadoLabel">Agregar Empleado</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="rol" class="form-label">Rol</label>
            <select class="form-select" id="rol" name="rol" required>
              <option value="trabajador">Trabajador</option>
              <option value="administrador">Administrador</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="nombre" class="form-label">Nombre</label>
            <input type="text" class="form-control" id="nombre" name="nombre" required>
          </div>
          <div class="mb-3">
            <label for="apellido" class="form-label">Apellido</label>
            <input type="text" class="form-control" id="apellido" name="apellido" required>
          </div>
          <div class="mb-3">
            <label for="email" class="form-label">Correo electrónico</label>
            <input type="email" class="form-control" id="email" name="email" required>
          </div>
          <div class="mb-3">
            <label for="password" class="form-label">Contraseña</label>
            <input type="password" class="form-control" id="password" name="password" required>
          </div>
          <div class="mb-3">
            <label for="telefono" class="form-label">Teléfono</label>
            <input type="text" class="form-control" id="telefono" name="telefono" required>
          </div>
          <div class="mb-3">
            <label for="direccion" class="form-label">Dirección</label>
            <input type="text" class="form-control" id="direccion" name="direccion" required>
          </div>
          <div id="alertaEmpleado"></div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
          <button type="submit" class="btn btn-primary">Agregar</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  // AJAX para agregar empleado
  document.getElementById('formAgregarEmpleado').addEventListener('submit', async function(e) {
    e.preventDefault();
    const form = e.target;
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());
    const alerta = document.getElementById('alertaEmpleado');
    try {
      const res = await fetch('/agregarEmpleado', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });
      const mensaje = await res.text();
      if (res.ok) {
        alerta.innerHTML = `<div class="alert alert-success">${mensaje}</div>`;
        form.reset();
      } else {
        alerta.innerHTML = `<div class="alert alert-danger">${mensaje}</div>`;
      }
    } catch (err) {
      alerta.innerHTML = `<div class="alert alert-danger">Error al conectar con el servidor.</div>`;
    }
  });

  // AJAX para marcar entrada y salida
  const btnEntrada = document.getElementById('btnEntrada');
  const btnSalida = document.getElementById('btnSalida');
  const alertaAsistencia = document.getElementById('alertaAsistencia');
  if (btnEntrada) {
    btnEntrada.addEventListener('click', async function() {
      try {
        const res = await fetch('/marcar-entrada', { method: 'POST' });
        const mensaje = await res.text();
        if (res.ok) {
          alertaAsistencia.innerHTML = `<div class="alert alert-success">${mensaje}</div>`;
        } else {
          alertaAsistencia.innerHTML = `<div class="alert alert-danger">${mensaje}</div>`;
        }
      } catch (err) {
        alertaAsistencia.innerHTML = `<div class="alert alert-danger">Error al conectar con el servidor.</div>`;
      }
    });
  }
  if (btnSalida) {
    btnSalida.addEventListener('click', async function() {
      try {
        const res = await fetch('/marcar-salida', { method: 'POST' });
        const mensaje = await res.text();
        if (res.ok) {
          alertaAsistencia.innerHTML = `<div class="alert alert-success">${mensaje}</div>`;
        } else {
          alertaAsistencia.innerHTML = `<div class="alert alert-danger">${mensaje}</div>`;
        }
      } catch (err) {
        alertaAsistencia.innerHTML = `<div class="alert alert-danger">Error al conectar con el servidor.</div>`;
      }
    });
  }

  const modalHistorial = document.getElementById('modalHistorial');
  function cargarHistorial(tipo = '', page = 1) {
    const alerta = document.getElementById('alertaHistorial');
    const tbody = document.querySelector('#tablaHistorial tbody');
    const paginacion = document.getElementById('paginacionHistorial');
    alerta.innerHTML = '';
    tbody.innerHTML = '<tr><td colspan="6">Cargando...</td></tr>';
    paginacion.innerHTML = '';
    let url = `/verMarcas?page=${page}`;
    if (tipo) url += `&tipo=${tipo}`;
    fetch(url)
      .then(res => {
        if (!res.ok) throw new Error('No se pudo obtener el historial');
        return res.json();
      })
      .then(respuesta => {
        const datos = respuesta.datos;
        const totalPages = respuesta.totalPages;
        const currentPage = respuesta.page;
        if (datos.length === 0) {
          tbody.innerHTML = '<tr><td colspan="6">Sin registros</td></tr>';
        } else {
          tbody.innerHTML = '';
          datos.forEach(a => {
            tbody.innerHTML += `<tr>
              <td>${a.nombre}</td>
              <td>${a.apellido}</td>
              <td>${a.email}</td>
              <td>${a.fecha}</td>
              <td>${a.horaEntrada || '-'}</td>
              <td>${a.horaSalida || '-'}</td>
            </tr>`;
          });
        }
        // Paginación
        if (totalPages > 1) {
          for (let i = 1; i <= totalPages; i++) {
            paginacion.innerHTML += `<li class="page-item${i === currentPage ? ' active' : ''}"><a class="page-link" href="#">${i}</a></li>`;
          }
          Array.from(paginacion.querySelectorAll('a')).forEach((a, idx) => {
            a.addEventListener('click', function(e) {
              e.preventDefault();
              cargarHistorial(tipo, idx + 1);
            });
          });
        }
      })
      .catch(err => {
        alerta.innerHTML = `<div class='alert alert-danger'>${err.message}</div>`;
        tbody.innerHTML = '';
      });
  }
  if (modalHistorial) {
    modalHistorial.addEventListener('show.bs.modal', function () {
      cargarHistorial();
    });
    document.getElementById('btnTodos').addEventListener('click', function(e) {
      e.preventDefault();
      cargarHistorial();
    });
    document.getElementById('btnAtrasados').addEventListener('click', function(e) {
      e.preventDefault();
      cargarHistorial('atrasados');
    });
    document.getElementById('btnAnticipados').addEventListener('click', function(e) {
      e.preventDefault();
      cargarHistorial('anticipados');
    });
  }

   // Gestión de usuarios
  const modalGestionUsuarios = document.getElementById('modalGestionUsuarios');
  if (modalGestionUsuarios) {
    modalGestionUsuarios.addEventListener('show.bs.modal', cargarUsuarios);
  }

  let paginaUsuarios = 1;
  let filtrosUsuarios = {};
  async function cargarUsuarios(page = 1) {
    paginaUsuarios = page;
    const alerta = document.getElementById('alertaUsuarios');
    const tbody = document.querySelector('#tablaUsuarios tbody');
    const paginacion = document.getElementById('paginacionUsuarios');
    alerta.innerHTML = '';
    tbody.innerHTML = '<tr><td colspan="7">Cargando...</td></tr>';
    if (paginacion) paginacion.innerHTML = '';
    // Construir query string con filtros
    let query = `page=${page}`;
    Object.entries(filtrosUsuarios).forEach(([key, value]) => {
      if (value) query += `&${key}=${encodeURIComponent(value)}`;
    });
    try {
      const res = await fetch(`/usuarios?${query}`);
      if (!res.ok) throw new Error('No se pudo obtener la lista de usuarios');
      const data = await res.json();
      const usuarios = data.usuarios || [];
      if (usuarios.length === 0) {
        tbody.innerHTML = '<tr><td colspan="7">Sin usuarios</td></tr>';
      } else {
        tbody.innerHTML = '';
        usuarios.forEach(u => {
          tbody.innerHTML += `<tr>
            <td>${u.nombre}</td>
            <td>${u.apellido}</td>
            <td>${u.email}</td>
            <td>${u.rol}</td>
            <td>${u.telefono}</td>
            <td>${u.direccion}</td>
            <td>
              <div class="d-flex flex-column gap-2 align-items-center justify-content-center">
                <button class='btn btn-sm btn-primary btn-editar-usuario d-flex align-items-center gap-2 w-100' data-id='${u.idUsuario}' title='Modificar'>
                  <i class='bi bi-pencil-square'></i> <span>Modificar</span>
                </button>
                <button class='btn btn-sm btn-danger btn-eliminar-usuario d-flex align-items-center gap-2 w-100' data-id='${u.idUsuario}' title='Eliminar'>
                  <i class='bi bi-trash'></i> <span>Eliminar</span>
                </button>
              </div>
            </td>
          </tr>`;
        });
      }
      // Paginación
      if (data.totalPages > 1) {
        paginacion.innerHTML = '';
        for (let i = 1; i <= data.totalPages; i++) {
          paginacion.innerHTML += `<li class="page-item${i === data.page ? ' active' : ''}"><a class="page-link" href="#">${i}</a></li>`;
        }
        Array.from(paginacion.querySelectorAll('a')).forEach((a, idx) => {
          a.addEventListener('click', function(e) {
            e.preventDefault();
            cargarUsuarios(idx + 1);
          });
        });
      }
    } catch (err) {
      alerta.innerHTML = `<div class='alert alert-danger'>${err.message}</div>`;
      tbody.innerHTML = '';
    }
    // Asignar eventos a los botones
    document.querySelectorAll('.btn-editar-usuario').forEach(btn => {
      btn.addEventListener('click', function() {
        abrirModalEditarUsuario(this.dataset.id);
      });
    });
    document.querySelectorAll('.btn-eliminar-usuario').forEach(btn => {
      btn.addEventListener('click', function() {
        eliminarUsuario(this.dataset.id);
      });
    });
  }

  // Filtrar usuarios
  document.getElementById('formFiltrarUsuarios').addEventListener('submit', function(e) {
    e.preventDefault();
    const form = e.target;
    filtrosUsuarios = {
      nombre: form.nombre.value.trim(),
      apellido: form.apellido.value.trim(),
      email: form.email.value.trim(),
      rol: form.rol.value
    };
    cargarUsuarios(1);
  });

  // Limpiar filtro
  document.getElementById('btnLimpiarFiltro').addEventListener('click', function() {
    filtrosUsuarios = {};
    document.getElementById('formFiltrarUsuarios').reset();
    cargarUsuarios(1);
  });

  // Abrir modal de edición y cargar datos
  async function abrirModalEditarUsuario(id) {
    const alerta = document.getElementById('alertaEditarUsuario');
    alerta.innerHTML = '';
    try {
      // Buscar el usuario en la tabla actual (ya cargada)
      const fila = document.querySelector(`button.btn-editar-usuario[data-id='${id}']`).closest('tr');
      if (!fila) return;
      const celdas = fila.querySelectorAll('td');
      document.getElementById('editarIdUsuario').value = id;
      document.getElementById('editarNombre').value = celdas[0].textContent;
      document.getElementById('editarApellido').value = celdas[1].textContent;
      document.getElementById('editarEmail').value = celdas[2].textContent;
      document.getElementById('editarRol').value = celdas[3].textContent;
      document.getElementById('editarTelefono').value = celdas[4].textContent;
      document.getElementById('editarDireccion').value = celdas[5].textContent;
      const modal = new bootstrap.Modal(document.getElementById('modalEditarUsuario'));
      modal.show();
    } catch (err) {
      alerta.innerHTML = `<div class='alert alert-danger'>No se pudo cargar el usuario.</div>`;
    }
  }

  // Guardar cambios de usuario
  document.getElementById('formEditarUsuario').addEventListener('submit', async function(e) {
    e.preventDefault();
    const alerta = document.getElementById('alertaEditarUsuario');
    alerta.innerHTML = '';
    const id = document.getElementById('editarIdUsuario').value;
    const data = {
      nombre: document.getElementById('editarNombre').value,
      apellido: document.getElementById('editarApellido').value,
      email: document.getElementById('editarEmail').value,
      rol: document.getElementById('editarRol').value,
      telefono: document.getElementById('editarTelefono').value,
      direccion: document.getElementById('editarDireccion').value
    };
    try {
      const res = await fetch(`/usuarios/${id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });
      const result = await res.json();
      if (res.ok) {
        alerta.innerHTML = `<div class='alert alert-success'>${result.message}</div>`;
        setTimeout(() => {
          bootstrap.Modal.getInstance(document.getElementById('modalEditarUsuario')).hide();
          cargarUsuarios();
        }, 1000);
      } else {
        alerta.innerHTML = `<div class='alert alert-danger'>${result.error || 'Error al modificar usuario'}</div>`;
      }
    } catch (err) {
      alerta.innerHTML = `<div class='alert alert-danger'>Error al conectar con el servidor.</div>`;
    }
  });

  // Eliminar usuario
  async function eliminarUsuario(id) {
    if (!confirm('¿Estás seguro de que deseas eliminar este usuario?')) return;
    const alerta = document.getElementById('alertaUsuarios');
    alerta.innerHTML = '';
    try {
      const res = await fetch(`/usuarios/${id}`, { method: 'DELETE' });
      const result = await res.json();
      if (res.ok) {
        alerta.innerHTML = `<div class='alert alert-success'>${result.message}</div>`;
        cargarUsuarios();
      } else {
        alerta.innerHTML = `<div class='alert alert-danger'>${result.error || 'Error al eliminar usuario'}</div>`;
      }
    } catch (err) {
      alerta.innerHTML = `<div class='alert alert-danger'>Error al conectar con el servidor.</div>`;
    }
  }
</script>